<!DOCTYPE html>
<html lang="fa-IR" dir="rtl">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <!-- <link rel="shortcut icon" href="images/icon.png" type="image/png" /> -->
    <!-- <link rel="stylesheet" href="./output.css" /> -->
    <title>تغییر رمز</title>
    <style>
      a,
      hr {
        color: inherit;
      }
      progress,
      sub,
      sup {
        vertical-align: baseline;
      }
      dialog,
      fieldset,
      legend,
      menu,
      ol,
      ul {
        padding: 0;
      }
      blockquote,
      body,
      dd,
      dl,
      fieldset,
      figure,
      h1,
      h2,
      h3,
      h4,
      h5,
      h6,
      hr,
      menu,
      ol,
      p,
      pre,
      ul {
        margin: 0;
      }
      .transition-all,
      input {
        transition-property: all;
      }
      .transition-all,
      .transition-colors,
      input {
        transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
        transition-duration: 150ms;
      }
      .bg-gray-100,
      .bg-primary,
      .bg-red-600,
      .bg-white,
      progress {
        --tw-bg-opacity: 1;
      }
      *,
      ::after,
      ::before {
        box-sizing: border-box;
        border: 0 solid #e5e7eb;
        --tw-border-spacing-x: 0;
        --tw-border-spacing-y: 0;
        --tw-translate-x: 0;
        --tw-translate-y: 0;
        --tw-rotate: 0;
        --tw-skew-x: 0;
        --tw-skew-y: 0;
        --tw-scale-x: 1;
        --tw-scale-y: 1;
        --tw-pan-x: ;
        --tw-pan-y: ;
        --tw-pinch-zoom: ;
        --tw-scroll-snap-strictness: proximity;
        --tw-gradient-from-position: ;
        --tw-gradient-via-position: ;
        --tw-gradient-to-position: ;
        --tw-ordinal: ;
        --tw-slashed-zero: ;
        --tw-numeric-figure: ;
        --tw-numeric-spacing: ;
        --tw-numeric-fraction: ;
        --tw-ring-inset: ;
        --tw-ring-offset-width: 0px;
        --tw-ring-offset-color: #fff;
        --tw-ring-color: rgb(59 130 246 / 0.5);
        --tw-ring-offset-shadow: 0 0 #0000;
        --tw-ring-shadow: 0 0 #0000;
        --tw-shadow: 0 0 #0000;
        --tw-shadow-colored: 0 0 #0000;
        --tw-blur: ;
        --tw-brightness: ;
        --tw-contrast: ;
        --tw-grayscale: ;
        --tw-hue-rotate: ;
        --tw-invert: ;
        --tw-saturate: ;
        --tw-sepia: ;
        --tw-drop-shadow: ;
        --tw-backdrop-blur: ;
        --tw-backdrop-brightness: ;
        --tw-backdrop-contrast: ;
        --tw-backdrop-grayscale: ;
        --tw-backdrop-hue-rotate: ;
        --tw-backdrop-invert: ;
        --tw-backdrop-opacity: ;
        --tw-backdrop-saturate: ;
        --tw-backdrop-sepia: ;
      }
      ::after,
      ::before {
        --tw-content: "";
      }
      :host,
      html {
        line-height: 1.5;
        -webkit-text-size-adjust: 100%;
        -moz-tab-size: 4;
        -o-tab-size: 4;
        tab-size: 4;
        font-family: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
        font-feature-settings: normal;
        font-variation-settings: normal;
        -webkit-tap-highlight-color: transparent;
      }
      body {
        line-height: inherit;
      }
      hr {
        height: 0;
        border-top-width: 1px;
      }
      abbr:where([title]) {
        -webkit-text-decoration: underline dotted;
        text-decoration: underline dotted;
      }
      h1,
      h2,
      h3,
      h4,
      h5,
      h6 {
        font-size: inherit;
        font-weight: inherit;
      }
      a {
        text-decoration: inherit;
      }
      b,
      strong {
        font-weight: bolder;
      }
      code,
      kbd,
      pre,
      samp {
        font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
        font-feature-settings: normal;
        font-variation-settings: normal;
        font-size: 1em;
      }
      small {
        font-size: 80%;
      }
      sub,
      sup {
        font-size: 75%;
        line-height: 0;
        position: relative;
      }
      sub {
        bottom: -0.25em;
      }
      sup {
        top: -0.5em;
      }
      table {
        text-indent: 0;
        border-color: inherit;
        border-collapse: collapse;
      }
      button,
      input,
      optgroup,
      select,
      textarea {
        font-family: inherit;
        font-feature-settings: inherit;
        font-variation-settings: inherit;
        font-size: 100%;
        font-weight: inherit;
        line-height: inherit;
        color: inherit;
        margin: 0;
        padding: 0;
      }
      body,
      input {
        color: rgb(63 63 70 / var(--tw-text-opacity));
        --tw-text-opacity: 1;
      }
      button,
      select {
        text-transform: none;
      }
      [type="button"],
      [type="reset"],
      [type="submit"],
      button {
        -webkit-appearance: button;
        background-color: transparent;
        background-image: none;
      }
      :-moz-focusring {
        outline: auto;
      }
      :-moz-ui-invalid {
        box-shadow: none;
      }
      progress {
        background-color: rgb(243 244 246 / var(--tw-bg-opacity));
      }
      ::-webkit-inner-spin-button,
      ::-webkit-outer-spin-button {
        height: auto;
      }
      [type="search"] {
        -webkit-appearance: textfield;
        outline-offset: -2px;
      }
      ::-webkit-search-decoration {
        -webkit-appearance: none;
      }
      ::-webkit-file-upload-button {
        -webkit-appearance: button;
        font: inherit;
      }
      summary {
        display: list-item;
      }
      menu,
      ol,
      ul {
        list-style: none;
      }
      textarea {
        resize: vertical;
      }
      input::-moz-placeholder,
      textarea::-moz-placeholder {
        opacity: 1;
        color: #9ca3af;
      }
      input::placeholder,
      textarea::placeholder {
        opacity: 1;
        color: #9ca3af;
      }
      .cursor-pointer,
      [role="button"],
      button {
        cursor: pointer;
      }
      :disabled {
        cursor: default;
      }
      audio,
      canvas,
      embed,
      iframe,
      img,
      object,
      svg,
      video {
        display: block;
        vertical-align: middle;
      }
      img,
      video {
        max-width: 100%;
        height: auto;
      }
      .hidden,
      [hidden],
      button #loader {
        display: none;
      }
      @font-face {
        font-family: Dana;
        src: local("Dana"), url(../../frontend/public/fonts/Dana/DanaFaNum-Regular.woff2);
        font-display: swap;
      }
      @font-face {
        font-family: "Morabba Medium";
        src: local("MorabbaMedium"), url(../../frontend/public/fonts/Morabba/Morabba-Medium.woff2);
        font-display: swap;
      }
      body {
        font-family: Dana;
      }
      :is(.dark progress) {
        --tw-bg-opacity: 1;
        background-color: rgb(28 28 40 / var(--tw-bg-opacity));
      }
      progress::-webkit-progress-bar {
        --tw-bg-opacity: 1;
        background-color: rgb(243 244 246 / var(--tw-bg-opacity));
      }
      :is(.dark progress)::-webkit-progress-bar {
        --tw-bg-opacity: 1;
        background-color: rgb(28 28 40 / var(--tw-bg-opacity));
      }
      progress::-webkit-progress-value {
        border-radius: 9999px;
        --tw-bg-opacity: 1;
        background-color: rgb(46 213 115 / var(--tw-bg-opacity));
      }
      progress::-moz-progress-bar {
        --tw-bg-opacity: 1;
        background-color: rgb(243 244 246 / var(--tw-bg-opacity));
      }
      :is(.dark progress)::-moz-progress-bar {
        --tw-bg-opacity: 1;
        background-color: rgb(28 28 40 / var(--tw-bg-opacity));
      }
      input {
        width: 100%;
        border-radius: 0.75rem;
        border-width: 1px;
        border-color: transparent;
        font-size: 0.875rem;
        line-height: 1.25rem;
        letter-spacing: -0.025em;
        outline: transparent solid 2px;
        outline-offset: 2px;
      }
      input::-moz-placeholder {
        --tw-text-opacity: 1;
        color: rgb(100 116 139 / var(--tw-text-opacity));
      }
      input::placeholder {
        --tw-text-opacity: 1;
        color: rgb(100 116 139 / var(--tw-text-opacity));
      }
      input:focus {
        --tw-border-opacity: 1;
        border-color: rgb(209 213 219 / var(--tw-border-opacity));
      }
      :is(.dark input) {
        --tw-text-opacity: 1;
        color: rgb(255 255 255 / var(--tw-text-opacity));
      }
      :is(.dark input)::-moz-placeholder {
        --tw-text-opacity: 1;
        color: rgb(148 163 184 / var(--tw-text-opacity));
      }
      :is(.dark input)::placeholder {
        --tw-text-opacity: 1;
        color: rgb(148 163 184 / var(--tw-text-opacity));
      }
      :is(.dark input:focus) {
        --tw-border-opacity: 1;
        border-color: rgb(74 75 109 / var(--tw-border-opacity));
      }
      .loader {
        width: 60px;
        aspect-ratio: 2;
        --_g: no-repeat radial-gradient(circle closest-side, #2ed573 90%, #0000);
        background: var(--_g) 0 50%, var(--_g) 50% 50%, var(--_g) 100% 50%;
        background-size: calc(100% / 3) 50%;
        animation: 1s linear infinite l3;
      }
      @keyframes l3 {
        20% {
          background-position: 0 0, 50% 50%, 100% 50%;
        }
        40% {
          background-position: 0 100%, 50% 0, 100% 50%;
        }
        60% {
          background-position: 0 50%, 50% 100%, 100% 0;
        }
        80% {
          background-position: 0 50%, 50% 50%, 100% 100%;
        }
      }
      #loader__container {
        visibility: hidden;
        opacity: 0;
      }
      input::-webkit-inner-spin-button,
      input::-webkit-outer-spin-button {
        -webkit-appearance: none;
        margin: 0;
      }
      input[type="number"] {
        -moz-appearance: textfield;
      }
      ::backdrop {
        --tw-border-spacing-x: 0;
        --tw-border-spacing-y: 0;
        --tw-translate-x: 0;
        --tw-translate-y: 0;
        --tw-rotate: 0;
        --tw-skew-x: 0;
        --tw-skew-y: 0;
        --tw-scale-x: 1;
        --tw-scale-y: 1;
        --tw-pan-x: ;
        --tw-pan-y: ;
        --tw-pinch-zoom: ;
        --tw-scroll-snap-strictness: proximity;
        --tw-gradient-from-position: ;
        --tw-gradient-via-position: ;
        --tw-gradient-to-position: ;
        --tw-ordinal: ;
        --tw-slashed-zero: ;
        --tw-numeric-figure: ;
        --tw-numeric-spacing: ;
        --tw-numeric-fraction: ;
        --tw-ring-inset: ;
        --tw-ring-offset-width: 0px;
        --tw-ring-offset-color: #fff;
        --tw-ring-color: rgb(59 130 246 / 0.5);
        --tw-ring-offset-shadow: 0 0 #0000;
        --tw-ring-shadow: 0 0 #0000;
        --tw-shadow: 0 0 #0000;
        --tw-shadow-colored: 0 0 #0000;
        --tw-blur: ;
        --tw-brightness: ;
        --tw-contrast: ;
        --tw-grayscale: ;
        --tw-hue-rotate: ;
        --tw-invert: ;
        --tw-saturate: ;
        --tw-sepia: ;
        --tw-drop-shadow: ;
        --tw-backdrop-blur: ;
        --tw-backdrop-brightness: ;
        --tw-backdrop-contrast: ;
        --tw-backdrop-grayscale: ;
        --tw-backdrop-hue-rotate: ;
        --tw-backdrop-invert: ;
        --tw-backdrop-opacity: ;
        --tw-backdrop-saturate: ;
        --tw-backdrop-sepia: ;
      }
      .fixed {
        position: fixed;
      }
      .absolute {
        position: absolute;
      }
      .relative {
        position: relative;
      }
      .inset-0 {
        inset: 0px;
      }
      .bottom-0 {
        bottom: 0;
      }
      .left-3 {
        left: 0.75rem;
      }
      .top-0 {
        top: 0;
      }
      .z-40 {
        z-index: 40;
      }
      .my-auto {
        margin-top: auto;
        margin-bottom: auto;
      }
      .\!mt-6 {
        margin-top: 1.5rem !important;
      }
      .mb-5 {
        margin-bottom: 1.25rem;
      }
      .mt-2 {
        margin-top: 0.5rem;
      }
      .flex {
        display: flex;
      }
      .h-12 {
        height: 3rem;
      }
      .h-4 {
        height: 1rem;
      }
      .h-\[67px\] {
        height: 67px;
      }
      .h-full {
        height: 100%;
      }
      .w-4 {
        width: 1rem;
      }
      .w-\[104px\] {
        width: 104px;
      }
      .w-\[143px\] {
        width: 143px;
      }
      .w-full {
        width: 100%;
      }
      .transform {
        transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
          scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
      }
      .flex-col {
        flex-direction: column;
      }
      .items-center {
        align-items: center;
      }
      .justify-center {
        justify-content: center;
      }
      .gap-x-2 {
        -moz-column-gap: 0.5rem;
        column-gap: 0.5rem;
      }
      .gap-y-10 {
        row-gap: 2.5rem;
      }
      .space-y-2 > :not([hidden]) ~ :not([hidden]) {
        --tw-space-y-reverse: 0;
        margin-top: calc(0.5rem * calc(1 - var(--tw-space-y-reverse)));
        margin-bottom: calc(0.5rem * var(--tw-space-y-reverse));
      }
      .space-y-2\.5 > :not([hidden]) ~ :not([hidden]) {
        --tw-space-y-reverse: 0;
        margin-top: calc(0.625rem * calc(1 - var(--tw-space-y-reverse)));
        margin-bottom: calc(0.625rem * var(--tw-space-y-reverse));
      }
      .rounded-2xl {
        border-radius: 1rem;
      }
      .rounded-xl {
        border-radius: 0.75rem;
      }
      .bg-black\/50 {
        background-color: rgb(0 0 0 / 0.5);
      }
      .bg-gray-100 {
        background-color: rgb(243 244 246 / var(--tw-bg-opacity));
      }
      .bg-primary {
        background-color: rgb(46 213 115 / var(--tw-bg-opacity));
      }
      .bg-red-600 {
        background-color: rgb(220 38 38 / var(--tw-bg-opacity));
      }
      .bg-white {
        background-color: rgb(255 255 255 / var(--tw-bg-opacity));
      }
      .fill-\[\#3a3a3a\] {
        fill: #3a3a3a;
      }
      .fill-\[\#5f5f5f\] {
        fill: #5f5f5f;
      }
      .p-7 {
        padding: 1.75rem;
      }
      .px-5 {
        padding-left: 1.25rem;
        padding-right: 1.25rem;
      }
      .pl-9 {
        padding-left: 2.25rem;
      }
      .pr-3 {
        padding-right: 0.75rem;
      }
      .pt-20 {
        padding-top: 5rem;
      }
      .text-center {
        text-align: center;
      }
      .font-MorabbaMedium {
        font-family: "Morabba Medium";
      }
      .text-3xl {
        font-size: 1.875rem;
        line-height: 2.25rem;
      }
      .text-sm {
        font-size: 0.875rem;
        line-height: 1.25rem;
      }
      .text-xl {
        font-size: 1.25rem;
        line-height: 1.75rem;
      }
      .text-red-500 {
        --tw-text-opacity: 1;
        color: rgb(239 68 68 / var(--tw-text-opacity));
      }
      .text-slate-500 {
        --tw-text-opacity: 1;
        color: rgb(100 116 139 / var(--tw-text-opacity));
      }
      .text-white {
        --tw-text-opacity: 1;
        color: rgb(255 255 255 / var(--tw-text-opacity));
      }
      .shadow-light {
        --tw-shadow: 0 1px 60px rgba(0, 0, 0, 0.05);
        --tw-shadow-colored: 0 1px 60px var(--tw-shadow-color);
        box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
      }
      .backdrop-blur-md {
        --tw-backdrop-blur: blur(12px);
        -webkit-backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale)
          var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
        backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale)
          var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
      }
      .transition-colors {
        transition-property: color, background-color, border-color, text-decoration-color, fill, stroke;
      }
      .hover\:bg-green-500:hover {
        --tw-bg-opacity: 1;
        background-color: rgb(34 197 94 / var(--tw-bg-opacity));
      }
      :is(.dark .dark\:bg-black\/30) {
        background-color: rgb(0 0 0 / 0.3);
      }
      :is(.dark .dark\:bg-gray) {
        --tw-bg-opacity: 1;
        background-color: rgb(28 28 40 / var(--tw-bg-opacity));
      }
      :is(.dark .dark\:bg-gray-700) {
        --tw-bg-opacity: 1;
        background-color: rgb(50 51 77 / var(--tw-bg-opacity));
      }
      :is(.dark .dark\:bg-gray-800) {
        --tw-bg-opacity: 1;
        background-color: rgb(40 41 61 / var(--tw-bg-opacity));
      }
      :is(.dark .dark\:fill-white) {
        fill: #fff;
      }
      :is(.dark .dark\:text-slate-400) {
        --tw-text-opacity: 1;
        color: rgb(148 163 184 / var(--tw-text-opacity));
      }
      :is(.dark .dark\:text-slate-600) {
        --tw-text-opacity: 1;
        color: rgb(71 85 105 / var(--tw-text-opacity));
      }
      :is(.dark .dark\:text-white) {
        --tw-text-opacity: 1;
        color: rgb(255 255 255 / var(--tw-text-opacity));
      }
      :is(.dark .dark\:shadow-none) {
        --tw-shadow: 0 0 #0000;
        --tw-shadow-colored: 0 0 #0000;
        box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
      }
      @media (min-width: 480px) {
        .xs\:w-\[400px\] {
          width: 400px;
        }
        .xs\:px-0 {
          padding-left: 0;
          padding-right: 0;
        }
      }
      @media (min-width: 640px) {
        input {
          font-size: 1rem;
          line-height: 1.5rem;
        }
        .sm\:left-4 {
          left: 1rem;
        }
        .sm\:mb-3 {
          margin-bottom: 0.75rem;
        }
        .sm\:mb-7 {
          margin-bottom: 1.75rem;
        }
        .sm\:h-14 {
          height: 3.5rem;
        }
        .sm\:h-5 {
          height: 1.25rem;
        }
        .sm\:w-5 {
          width: 1.25rem;
        }
        .sm\:space-y-3 > :not([hidden]) ~ :not([hidden]) {
          --tw-space-y-reverse: 0;
          margin-top: calc(0.75rem * calc(1 - var(--tw-space-y-reverse)));
          margin-bottom: calc(0.75rem * var(--tw-space-y-reverse));
        }
        .sm\:space-y-3\.5 > :not([hidden]) ~ :not([hidden]) {
          --tw-space-y-reverse: 0;
          margin-top: calc(0.875rem * calc(1 - var(--tw-space-y-reverse)));
          margin-bottom: calc(0.875rem * var(--tw-space-y-reverse));
        }
        .sm\:px-8 {
          padding-left: 2rem;
          padding-right: 2rem;
        }
        .sm\:py-9 {
          padding-top: 2.25rem;
          padding-bottom: 2.25rem;
        }
        .sm\:pl-12 {
          padding-left: 3rem;
        }
        .sm\:pr-5 {
          padding-right: 1.25rem;
        }
        .sm\:text-xl {
          font-size: 1.25rem;
          line-height: 1.75rem;
        }
      }
      .btn-secondry-loader {
        width: 50px;
        aspect-ratio: 2;
        --_g: no-repeat radial-gradient(circle closest-side, #f5f5f5 90%, #0000);
        background: var(--_g) 0% 50%, var(--_g) 50% 50%, var(--_g) 100% 50%;
        background-size: calc(100% / 3) 50%;
        animation: l3 1s infinite linear;
      }
      button #loader {
        display: none;
      }
      button.load *:not(#loader) {
        display: none;
      }
      button.load #loader {
        display: inline-block;
      }
      button.load:hover {
        cursor: progress;
        color: #4e81fb;
      }
      button:disabled,
      button[disabled] {
        opacity: 70;
      }
    </style>
  </head>
  <body class="relative bg-gray-100 dark:bg-gray">
    <script>
      if (localStorage.theme === "dark" || (!("theme" in localStorage) && window.matchMedia("(prefers-color-scheme: dark)").matches)) {
        document.documentElement.classList.add("dark");
      } else {
        document.documentElement.classList.remove("dark");
      }
    </script>
    <svg class="hidden">
      <symbol id="eye-slash" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          d="M3.98 8.223A10.477 10.477 0 0 0 1.934 12C3.226 16.338 7.244 19.5 12 19.5c.993 0 1.953-.138 2.863-.395M6.228 6.228A10.451 10.451 0 0 1 12 4.5c4.756 0 8.773 3.162 10.065 7.498a10.522 10.522 0 0 1-4.293 5.774M6.228 6.228 3 3m3.228 3.228 3.65 3.65m7.894 7.894L21 21m-3.228-3.228-3.65-3.65m0 0a3 3 0 1 0-4.243-4.243m4.242 4.242L9.88 9.88" />
      </symbol>
      <symbol id="eye" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          d="M2.036 12.322a1.012 1.012 0 0 1 0-.639C3.423 7.51 7.36 4.5 12 4.5c4.638 0 8.573 3.007 9.963 7.178.07.207.07.431 0 .639C20.577 16.49 16.64 19.5 12 19.5c-4.638 0-8.573-3.007-9.963-7.178Z" />
        <path stroke-linecap="round" stroke-linejoin="round" d="M15 12a3 3 0 1 1-6 0 3 3 0 0 1 6 0Z" />
      </symbol>
    </svg>

    <main class="flex flex-col items-center gap-y-10 px-5 pt-20 xs:px-0">
      <!-- main -->
      <div class="w-full rounded-2xl bg-white p-7 shadow-light xs:w-[400px] sm:px-8 sm:py-9 dark:bg-gray-800 dark:shadow-none">
        <!-- main header -->
        <div class="mb-5 flex flex-col items-center sm:mb-7">
          <span class="font-MorabbaMedium text-3xl sm:mb-3 dark:text-white"> تغییر رمز </span>
        </div>
        <!-- Form -->
        <form class="space-y-2.5 sm:space-y-3.5">
          <div class="relative">
            <input
              id="password-input"
              type="password"
              class="h-12 bg-gray-100 pl-9 pr-3 text-sm sm:h-14 sm:pl-12 sm:pr-5 sm:text-xl dark:bg-gray-700"
              placeholder="رمز جدید"
              required />
            <svg
              id="password-input-show-btn"
              class="absolute cursor-pointer bottom-0 left-3 top-0 my-auto h-4 w-4 text-slate-500 sm:left-4 sm:h-5 sm:w-5 dark:text-slate-400">
              <use href="#eye-slash"></use>
            </svg>
            <svg
              id="password-input-hide-btn"
              class="absolute hidden cursor-pointer bottom-0 left-3 top-0 my-auto h-4 w-4 text-slate-500 sm:left-4 sm:h-5 sm:w-5 dark:text-slate-400">
              <use href="#eye"></use>
            </svg>
          </div>
          <div class="relative">
            <input
              id="confirm-password-input"
              type="password"
              class="h-12 bg-gray-100 pl-9 pr-3 text-sm sm:h-14 sm:pl-12 sm:pr-5 sm:text-xl dark:bg-gray-700"
              placeholder="تایید رمز جدید"
              required />
            <svg
              id="confirm-password-input-show-btn"
              class="absolute cursor-pointer bottom-0 left-3 top-0 my-auto h-4 w-4 text-slate-500 sm:left-4 sm:h-5 sm:w-5 dark:text-slate-400">
              <use href="#eye-slash"></use>
            </svg>
            <svg
              id="confirm-password-input-hide-btn"
              class="absolute hidden cursor-pointer bottom-0 left-3 top-0 my-auto h-4 w-4 text-slate-500 sm:left-4 sm:h-5 sm:w-5 dark:text-slate-400">
              <use href="#eye"></use>
            </svg>
          </div>
          <p class="error text-red-500 text-center mt-3 hidden"></p>
          <button
            type="submit"
            class="submit-btn h-12 w-full rounded-xl bg-primary text-center text-xl text-white transition-colors hover:bg-green-500 sm:h-14 !mt-6">
            <span> تغییر رمز </span>
            <div id="loader" class="btn-secondry-loader mt-2 w-8"></div>
          </button>
        </form>
      </div>
    </main>

    <!-- <script src="script.js" type="module"></script> -->
    <script>
      import { BASE_URL } from "../../frontend/src/scripts/funcs/utils.js";

      const form = document.querySelector("form"),
        passwordInput = document.querySelector("#password-input"),
        confirmPasswordInput = document.querySelector("#confirm-password-input"),
        passwordInputShowBtn = document.querySelector("#password-input-show-btn"),
        confirmPasswordInputShowBtn = document.querySelector("#confirm-password-input-show-btn"),
        passwordInputHideBtn = document.querySelector("#password-input-hide-btn"),
        confirmPasswordInputHideBtn = document.querySelector("#confirm-password-input-hide-btn"),
        errorElem = document.querySelector(".error"),
        submitBtn = document.querySelector(".submit-btn");

      passwordInputShowBtn.addEventListener("click", () => {
        (passwordInput.type = "text"), passwordInputShowBtn.classList.add("hidden"), passwordInputHideBtn.classList.remove("hidden");
      });
      passwordInputHideBtn.addEventListener("click", () => {
        (passwordInput.type = "password"), passwordInputShowBtn.classList.remove("hidden"), passwordInputHideBtn.classList.add("hidden");
      });

      confirmPasswordInputShowBtn.addEventListener("click", () => {
        (confirmPasswordInput.type = "text"), confirmPasswordInputShowBtn.classList.add("hidden"), confirmPasswordInputHideBtn.classList.remove("hidden");
      });
      confirmPasswordInputHideBtn.addEventListener("click", () => {
        (confirmPasswordInput.type = "password"), confirmPasswordInputShowBtn.classList.remove("hidden"), confirmPasswordInputHideBtn.classList.add("hidden");
      });

      form.addEventListener("submit", async s => {
        if ((s.preventDefault(), passwordInput.value != confirmPasswordInput.value)) {
          errorElem.classList.remove("hidden");
          errorElem.innerHTML = `هر دو ورودی باید برابر باشند`;
          return;
        }

        errorElem.classList.add("hidden");
        submitBtn.classList.add("load");
        submitBtn.setAttribute("disabled", "true");

        await fetch(location.href, {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ password: passwordInput.value, confirmPassword: confirmPasswordInput.value }),
        })
          .then(res => res.json())
          .then(res => {
            console.log(res);
            if (res.status == 200) {
              let reDirectingTime = 5;
              submitBtn.innerHTML = `عملیات موفق...${reDirectingTime}`;
              const interval = setInterval(() => {
                reDirectingTime = reDirectingTime - 1;
                submitBtn.innerHTML = `عملیات موفق...${reDirectingTime}`;

                if (reDirectingTime === 0) {
                  clearInterval(interval);
                  location.href = `${BASE_URL}/login.html`;
                }
              }, 1000);
            } else if (res.status == 403) {
              errorElem.classList.remove("hidden");
              errorElem.innerHTML = `زمان استفاده از این لینک تمام شده. <a href=${BASE_URL}/forget-password.html style="text-decoration: underline; color: #4e81fb"> درخواست دوباره </a>`;
            } else if (res.status == 401) {
              errorElem.classList.remove("hidden");
              errorElem.innerHTML = `این لینک منقضی شده است . <a href=${BASE_URL}/login.html style="text-decoration: underline; color: #4e81fb"> ورود </a>`;
            } else {
              errorElem.classList.remove("hidden");
              errorElem.innerHTML = `مشکلی پیش آمده`;
            }
          })

          .finally(() => {
            submitBtn.classList.remove("load");
            submitBtn.removeAttribute("disabled");
          });
      });
    </script>
  </body>
</html>
